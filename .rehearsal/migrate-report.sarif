{
  "version": "2.1.0",
  "$schema": "http://json.schemastore.org/sarif-2.1.0-rtm.4",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "@rehearsal/migrate",
          "informationUri": "https://github.com/rehearsal-js/rehearsal-js",
          "rules": [
            {
              "id": "TS2305",
              "name": "TS2305",
              "shortDescription": {
                "text": "Module '\"../lib/util\"' has no exported member 'handleInput'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2554",
              "name": "TS2554",
              "shortDescription": {
                "text": "Expected 1 arguments, but got 0."
              },
              "helpUri": ""
            },
            {
              "id": "TS7006",
              "name": "TS7006",
              "shortDescription": {
                "text": "Parameter 'cli' implicitly has an 'any' type."
              },
              "helpUri": ""
            },
            {
              "id": "TS2339",
              "name": "TS2339",
              "shortDescription": {
                "text": "Property 'isInSupportWindow' does not exist on type '{}'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2345",
              "name": "TS2345",
              "shortDescription": {
                "text": "Argument of type '{}' is not assignable to parameter of type '{ projects: { projectName: unknown; projectPath: PathLike; }[]; }'..   Property 'projects' is missing in type '{}' but required in type '{ projects: { projectName: unknown; projectPath: PathLike; }[]; }'."
              },
              "helpUri": ""
            },
            {
              "id": "error-generated-by-Eslint-core",
              "name": "error-generated-by-Eslint-core",
              "shortDescription": {
                "text": "Parsing error: Unexpected token :"
              },
              "helpUri": ""
            },
            {
              "id": "TS2732",
              "name": "TS2732",
              "shortDescription": {
                "text": "Cannot find module '../package.json'. Consider using '--resolveJsonModule' to import module with '.json' extension."
              },
              "helpUri": ""
            },
            {
              "id": "node/no-unsupported-features/es-syntax",
              "name": "node/no-unsupported-features/es-syntax",
              "shortDescription": {
                "text": "Import and export declarations are not supported yet."
              },
              "helpUri": ""
            },
            {
              "id": "TS18049",
              "name": "TS18049",
              "shortDescription": {
                "text": "'validateConfigSchema.errors' is possibly 'null' or 'undefined'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2355",
              "name": "TS2355",
              "shortDescription": {
                "text": "A function whose declared type is neither 'void' nor 'any' must return a value."
              },
              "helpUri": ""
            },
            {
              "id": "TS4060",
              "name": "TS4060",
              "shortDescription": {
                "text": "Return type of exported function has or is using private name ''."
              },
              "helpUri": ""
            },
            {
              "id": "TS2322",
              "name": "TS2322",
              "shortDescription": {
                "text": "Type '{ packages: string[]; doc: string; } | { packages: string[]; doc: string; } | undefined' is not assignable to type '{ packages: string[]; doc: any; }'..   Type 'undefined' is not assignable to type '{ packages: string[]; doc: any; }'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2531",
              "name": "TS2531",
              "shortDescription": {
                "text": "Object is possibly 'null'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2769",
              "name": "TS2769",
              "shortDescription": {
                "text": "No overload matches this call..   Overload 1 of 3, '(path: PathOrFileDescriptor, options?: { encoding?: null | undefined; flag?: string | undefined; } | null | undefined): Buffer', gave the following error..     Type '\"UTF-8\"' has no properties in common with type '{ encoding?: null | undefined; flag?: string | undefined; }'..   Overload 2 of 3, '(path: PathOrFileDescriptor, options: { encoding: BufferEncoding; flag?: string | undefined; } | BufferEncoding): string', gave the following error..     Argument of type '\"UTF-8\"' is not assignable to parameter of type '{ encoding: BufferEncoding; flag?: string | undefined; } | BufferEncoding'..   Overload 3 of 3, '(path: PathOrFileDescriptor, options?: BufferEncoding | (ObjectEncodingOptions & { flag?: string | undefined; }) | null | undefined): string | Buffer', gave the following error..     Argument of type '\"UTF-8\"' is not assignable to parameter of type 'BufferEncoding | (ObjectEncodingOptions & { flag?: string | undefined; }) | null | undefined'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2365",
              "name": "TS2365",
              "shortDescription": {
                "text": "Operator '<=' cannot be applied to types 'number' and 'Date'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2371",
              "name": "TS2371",
              "shortDescription": {
                "text": "A parameter initializer is only allowed in a function or constructor implementation."
              },
              "helpUri": ""
            },
            {
              "id": "TS2304",
              "name": "TS2304",
              "shortDescription": {
                "text": "Cannot find name 'currentDate'."
              },
              "helpUri": ""
            },
            {
              "id": "TS18004",
              "name": "TS18004",
              "shortDescription": {
                "text": "No value exists in scope for the shorthand property 'resolvedVersion'. Either declare one or provide an initializer."
              },
              "helpUri": ""
            },
            {
              "id": "TS7053",
              "name": "TS7053",
              "shortDescription": {
                "text": "Element implicitly has an 'any' type because expression of type '\"duration\"' can't be used to index type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'..   Property 'duration' does not exist on type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'."
              },
              "helpUri": ""
            },
            {
              "id": "TS7034",
              "name": "TS7034",
              "shortDescription": {
                "text": "Variable 'expiringSoonTable' implicitly has type 'any[]' in some locations where its type cannot be determined."
              },
              "helpUri": ""
            },
            {
              "id": "TS7031",
              "name": "TS7031",
              "shortDescription": {
                "text": "Binding element 'name' implicitly has an 'any' type."
              },
              "helpUri": ""
            },
            {
              "id": "TS7005",
              "name": "TS7005",
              "shortDescription": {
                "text": "Variable 'expiringSoonTable' implicitly has an 'any[]' type."
              },
              "helpUri": ""
            },
            {
              "id": "TS18046",
              "name": "TS18046",
              "shortDescription": {
                "text": "'filename' is of type 'unknown'."
              },
              "helpUri": ""
            },
            {
              "id": "TS7016",
              "name": "TS7016",
              "shortDescription": {
                "text": "Could not find a declaration file for module 'minipass-fetch'. '/Users/akusuma/workspace/opensource/supported/node_modules/minipass-fetch/lib/index.js' implicitly has an 'any' type..   Try `npm i --save-dev @types/minipass-fetch` if it exists or add a new declaration (.d.ts) file containing `declare module 'minipass-fetch';`"
              },
              "helpUri": ""
            },
            {
              "id": "TS2698",
              "name": "TS2698",
              "shortDescription": {
                "text": "Spread types may only be created from object types."
              },
              "helpUri": ""
            },
            {
              "id": "TS1192",
              "name": "TS1192",
              "shortDescription": {
                "text": "Module '\"/Users/akusuma/workspace/opensource/supported/lib/project/index\"' has no default export."
              },
              "helpUri": ""
            },
            {
              "id": "TS2552",
              "name": "TS2552",
              "shortDescription": {
                "text": "Cannot find name 'setupProjectFn'. Did you mean 'setupProject'?"
              },
              "helpUri": ""
            },
            {
              "id": "TS7022",
              "name": "TS7022",
              "shortDescription": {
                "text": "'projectPaths' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer."
              },
              "helpUri": ""
            },
            {
              "id": "TS7015",
              "name": "TS7015",
              "shortDescription": {
                "text": "Element implicitly has an 'any' type because index expression is not of type 'number'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2538",
              "name": "TS2538",
              "shortDescription": {
                "text": "Type 'undefined' cannot be used as an index type."
              },
              "helpUri": ""
            },
            {
              "id": "TS2532",
              "name": "TS2532",
              "shortDescription": {
                "text": "Object is possibly 'undefined'."
              },
              "helpUri": ""
            },
            {
              "id": "TS2739",
              "name": "TS2739",
              "shortDescription": {
                "text": "Type '{ type: string; name: string; date: Date; }[]' is missing the following properties from type '{ type: string; name: strin; }': type, name"
              },
              "helpUri": ""
            }
          ]
        }
      },
      "artifacts": [
        {
          "location": {
            "uri": "lib/cli.ts"
          }
        },
        {
          "location": {
            "uri": "lib/help.ts"
          }
        },
        {
          "location": {
            "uri": "lib/policy-rules.ts"
          }
        },
        {
          "location": {
            "uri": "lib/util.ts"
          }
        },
        {
          "location": {
            "uri": "lib/lts/index.ts"
          }
        },
        {
          "location": {
            "uri": "lib/npm/config.ts"
          }
        },
        {
          "location": {
            "uri": "lib/output/cli-output.ts"
          }
        },
        {
          "location": {
            "uri": "lib/output/csv-output.ts"
          }
        },
        {
          "location": {
            "uri": "lib/output/messages.ts"
          }
        },
        {
          "location": {
            "uri": "lib/project/index.ts"
          }
        },
        {
          "location": {
            "uri": "lib/project/multiple-projects.ts"
          }
        },
        {
          "location": {
            "uri": "lib/project/setup-project.ts"
          }
        },
        {
          "location": {
            "uri": "lib/time/index.ts"
          }
        }
      ],
      "results": [
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"../lib/util\"' has no exported member 'handleInput'."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 51,
                  "endLine": 4,
                  "endColumn": 62
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2554",
          "ruleIndex": 1,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Expected 1 arguments, but got 0."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"./output/messages\"' has no exported member 'DEFAULT_SUPPORT_MESSAGE'."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 14,
                  "endLine": 14,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'cli' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 21,
                  "endLine": 18,
                  "endColumn": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'isInSupportWindow' does not exist on type '{}'."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 18,
                  "endLine": 42,
                  "endColumn": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2554",
          "ruleIndex": 1,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Expected 0 arguments, but got 1."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 10
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type '{0}' is not assignable to parameter of type 'projects: { projectName: unknown; projectPath: PathLike'. Consider verifying both types, using type assertion: '( result as string)', or using type guard: 'if ( result instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 33,
                  "endLine": 63,
                  "endColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'setupProjectFn' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'config' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 3,
                  "endLine": 82,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/cli.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/cli.ts",
                  "index": 0
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 68,
                  "endLine": 18,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2732",
          "ruleIndex": 6,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find module '../package.json'. Consider using '--resolveJsonModule' to import module with '.json' extension."
          },
          "analysisTarget": {
            "uri": "lib/help.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/help.ts",
                  "index": 1
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 17,
                  "endLine": 6,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "node/no-unsupported-features/es-syntax",
          "ruleIndex": 7,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Import and export declarations are not supported yet."
          },
          "analysisTarget": {
            "uri": "lib/help.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/help.ts",
                  "index": 1
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "node/no-unsupported-features/es-syntax",
          "ruleIndex": 7,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Import and export declarations are not supported yet."
          },
          "analysisTarget": {
            "uri": "lib/help.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/help.ts",
                  "index": 1
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "node/no-unsupported-features/es-syntax",
          "ruleIndex": 7,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Import and export declarations are not supported yet."
          },
          "analysisTarget": {
            "uri": "lib/help.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/help.ts",
                  "index": 1
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"./util\"' has no exported member 'DEFAULT_PRIMARY_POLICY'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 14,
                  "endLine": 2,
                  "endColumn": 36
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS18049",
          "ruleIndex": 8,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "'validateConfigSchema.errors' is possibly 'null' or 'undefined'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 5,
                  "endLine": 11,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'ignorePrereleases' does not exist on type '{ primary: any; }'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 17,
                  "endLine": 25,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'primary' does not exist on type 'ProcessConfig'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 23,
                  "endLine": 27,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'primary' does not exist on type 'ProcessConfig'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 43,
                  "endLine": 29,
                  "endColumn": 50
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'custom' does not exist on type 'ProcessConfig'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 23,
                  "endLine": 33,
                  "endColumn": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'custom' does not exist on type '{ primary: any; }'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 19,
                  "endLine": 35,
                  "endColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'custom' does not exist on type 'ProcessConfig'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2355",
          "ruleIndex": 9,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "A function whose declared type is neither 'void' nor 'any' must return a value."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 61,
                  "endLine": 39,
                  "endColumn": 76
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'custom' does not exist on type '{ primary: any; }'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 27,
                  "endLine": 41,
                  "endColumn": 33
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'custom' does not exist on type '{ primary: any; }'."
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 23,
                  "endLine": 52,
                  "endColumn": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/policy-rules.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/policy-rules.ts",
                  "index": 2
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 31,
                  "endLine": 7,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS4060",
          "ruleIndex": 10,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Return type of exported function has or is using private name ''."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 85,
                  "endLine": 73,
                  "endColumn": 85
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The function expects to return 'packages: string[]; doc: any', but 'packages: string[]; doc: string; } | { packages: string[]; doc: string; } | undefined' is returned. Please convert 'packages: string[]; doc: string; } | { packages: string[]; doc: string; } | undefined' value to 'packages: string[]; doc: any' or update the function's return type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 3,
                  "endLine": 76,
                  "endColumn": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'info' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 27,
                  "endLine": 87,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2531",
          "ruleIndex": 12,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Object is possibly 'null'."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 29,
                  "endLine": 90,
                  "endColumn": 55
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2531",
          "ruleIndex": 12,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Object is possibly 'null'."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 16,
                  "endLine": 96,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 38,
                  "endLine": 164,
                  "endColumn": 49
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 38,
                  "endLine": 175,
                  "endColumn": 49
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 32,
                  "endLine": 194,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type '{0}' is not assignable to parameter of type 'string'. Consider verifying both types, using type assertion: '(name as string)', or using type guard: 'if (name instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 54,
                  "endLine": 204,
                  "endColumn": 58
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 53,
                  "endLine": 223,
                  "endColumn": 64
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'input' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 40,
                  "endLine": 296,
                  "endColumn": 45
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2769",
          "ruleIndex": 13,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "No overload matches this call..  Overload 1 of 3, '(path: PathOrFileDescriptor, options?: { encoding?: null | undefined; flag?: string | undefined; } | null | undefined): Buffer', gave the following error..    Type '\"UTF-8\"' has no properties in common with type '{ encoding?: null | undefined; flag?: string | undefined; }'..  Overload 2 of 3, '(path: PathOrFileDescriptor, options: { encoding: BufferEncoding; flag?: string | undefined; } | BufferEncoding): string', gave the following error..    Argument of type '\"UTF-8\"' is not assignable to parameter of type '{ encoding: BufferEncoding; flag?: string | undefined; } | BufferEncoding'..  Overload 3 of 3, '(path: PathOrFileDescriptor, options?: BufferEncoding | (ObjectEncodingOptions & { flag?: string | undefined; }) | null | undefined): string | Buffer', gave the following error..    Argument of type '\"UTF-8\"' is not assignable to parameter of type 'BufferEncoding | (ObjectEncodingOptions & { flag?: string | undefined; }) | null | undefined'."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 300,
                  "startColumn": 57,
                  "endLine": 300,
                  "endColumn": 64
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'code' does not exist on type 'object'."
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 12,
                  "endLine": 309,
                  "endColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/util.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/util.ts",
                  "index": 3
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 40,
                  "endLine": 33,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2732",
          "ruleIndex": 6,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find module './node-lts.json'. Consider using '--resolveJsonModule' to import module with '.json' extension."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 26,
                  "endLine": 4,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2732",
          "ruleIndex": 6,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find module './ember-lts.json'. Consider using '--resolveJsonModule' to import module with '.json' extension."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 27,
                  "endLine": 6,
                  "endColumn": 45
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter '_time' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 22,
                  "endLine": 32,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'major' does not exist on type 'SemVer | null'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 13,
                  "endLine": 47,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'entry' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 33,
                  "endLine": 59,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2365",
          "ruleIndex": 14,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Operator '<=' cannot be applied to types 'number' and 'Date'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 44,
                  "endLine": 109,
                  "endColumn": 71
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'ltsList' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 24,
                  "endLine": 122,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2371",
          "ruleIndex": 15,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "A parameter initializer is only allowed in a function or constructor implementation."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 97,
                  "endLine": 153,
                  "endColumn": 128
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'currentDate'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 17,
                  "endLine": 161,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'type' does not exist on type '(message?: any, ...optionalParams: any[]) => void'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 12,
                  "endLine": 163,
                  "endColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'resolvedVersion'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 9,
                  "endLine": 167,
                  "endColumn": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'resolvedVersion'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 45,
                  "endLine": 175,
                  "endColumn": 60
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'resolvedVersion'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 27,
                  "endLine": 200,
                  "endColumn": 42
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'resolvedVersion'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 44,
                  "endLine": 202,
                  "endColumn": 59
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS18004",
          "ruleIndex": 17,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "No value exists in scope for the shorthand property 'resolvedVersion'. Either declare one or provide an initializer."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 7,
                  "endLine": 218,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'type' does not exist on type '(message?: any, ...optionalParams: any[]) => void'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 50,
                  "endLine": 220,
                  "endColumn": 54
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type '\"duration\"' can't be used to index type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'..  Property 'duration' does not exist on type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 7,
                  "endLine": 225,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type '\"deprecationDate\"' can't be used to index type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'..  Property 'deprecationDate' does not exist on type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 7,
                  "endLine": 227,
                  "endColumn": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type '\"message\"' can't be used to index type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'..  Property 'message' does not exist on type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 229,
                  "startColumn": 7,
                  "endLine": 229,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type '\"message\"' can't be used to index type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'..  Property 'message' does not exist on type '{ isSupported: boolean; resolvedVersion: any; latestVersion: string; }'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 7,
                  "endLine": 234,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'type' does not exist on type '(message?: any, ...optionalParams: any[]) => void'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 33,
                  "endLine": 241,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'resolvedVersion'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 36,
                  "endLine": 251,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2531",
          "ruleIndex": 12,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Object is possibly 'null'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 23,
                  "endLine": 257,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'duration' does not exist on type '{}'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 29,
                  "endLine": 267,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'deprecationDate' does not exist on type '{}'."
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 29,
                  "endLine": 269,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/lts/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/lts/index.ts",
                  "index": 4
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 23,
                  "endLine": 9,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'cwd' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/npm/config.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/npm/config.ts",
                  "index": 5
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 34,
                  "endLine": 7,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2769",
          "ruleIndex": 13,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "No overload matches this call..  Overload 1 of 2, '(input: readonly { [key: string]: any; }[], options?: Options | undefined): readonly { [key: string]: any; }[]', gave the following error..    Argument of type 'string' is not assignable to parameter of type 'readonly { [key: string]: any; }[]'..  Overload 2 of 2, '(input: { [key: string]: any; }, options?: Options | undefined): { [key: string]: any; }', gave the following error..    Argument of type 'string' is not assignable to parameter of type '{ [key: string]: any; }'."
          },
          "analysisTarget": {
            "uri": "lib/npm/config.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/npm/config.ts",
                  "index": 5
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "node/no-unsupported-features/es-syntax",
          "ruleIndex": 7,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Import and export declarations are not supported yet."
          },
          "analysisTarget": {
            "uri": "lib/npm/config.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/npm/config.ts",
                  "index": 5
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 1,
                  "endLine": 3,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "node/no-unsupported-features/es-syntax",
          "ruleIndex": 7,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Import and export declarations are not supported yet."
          },
          "analysisTarget": {
            "uri": "lib/npm/config.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/npm/config.ts",
                  "index": 5
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endLine": 4,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"./messages\"' has no exported member 'LOG_TITLE'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 14,
                  "endLine": 7,
                  "endColumn": 23
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'results' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 25,
                  "endLine": 29,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7034",
          "ruleIndex": 19,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'expiringSoonTable' implicitly has type 'any[]' in some locations where its type cannot be determined."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7031",
          "ruleIndex": 20,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Binding element 'name' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 8,
                  "endLine": 60,
                  "endColumn": 12
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'expiringSoonTable' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 19,
                  "endLine": 101,
                  "endColumn": 36
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'packageInfo' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 26,
                  "endLine": 116,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'list'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 22,
                  "endLine": 139,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'int'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 25,
                  "endLine": 141,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'int'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 18,
                  "endLine": 143,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'list'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 49,
                  "endLine": 160,
                  "endColumn": 53
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'violationInfo' does not exist on type '{ violations: { major: numb; }; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 23,
                  "endLine": 164,
                  "endColumn": 36
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type '\"total\"' can't be used to index type '{ major: numb; }'..  Property 'total' does not exist on type '{ major: numb; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 32,
                  "endLine": 166,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type '\"total\"' can't be used to index type '{ major: numb; }'..  Property 'total' does not exist on type '{ major: numb; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 12,
                  "endLine": 168,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ major: numb; }'..  No index signature with a parameter of type 'string' was found on type '{ major: numb; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 47,
                  "endLine": 179,
                  "endColumn": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'int'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 69,
                  "endLine": 193,
                  "endColumn": 72
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'pkg' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 50,
                  "endLine": 195,
                  "endColumn": 53
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'result' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 39,
                  "endLine": 212,
                  "endColumn": 45
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isInSupportWindow' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 3,
                  "endLine": 237,
                  "endColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'expiresSoon' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 3,
                  "endLine": 239,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'flags' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 3,
                  "endLine": 241,
                  "endColumn": 8
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isInSupportWindow' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 3,
                  "endLine": 270,
                  "endColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'unsupportedPackages' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 3,
                  "endLine": 272,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'supportedPackages' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 3,
                  "endLine": 274,
                  "endColumn": 20
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'expiresSoon' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 3,
                  "endLine": 276,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'nodePackage' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 3,
                  "endLine": 278,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'emberCliPackage' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 3,
                  "endLine": 280,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'emberSourcePackage' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 3,
                  "endLine": 282,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2554",
          "ruleIndex": 1,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Expected 3 arguments, but got 2."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 28,
                  "endLine": 309,
                  "endColumn": 88
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'supportResult' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 35,
                  "endLine": 330,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'title: string; head: string; body: \"\" | Table<TableRow' is being returned or assigned, but type 'title: string; head: stri' is expected. Please convert type 'title: string; head: string; body: \"\" | Table<TableRow' to type 'title: string; head: stri', or return or assign a variable of type 'title: string; head: stri'"
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 5,
                  "endLine": 368,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'list'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 45,
                  "endLine": 379,
                  "endColumn": 49
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7031",
          "ruleIndex": 20,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Binding element 'type' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 28,
                  "endLine": 393,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ major: number; minor: number; patch: number; total: number; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 9,
                  "endLine": 399,
                  "endColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ major: number; minor: number; patch: number; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 406,
                  "startColumn": 11,
                  "endLine": 406,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ major: number; minor: number; patch: number; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 9,
                  "endLine": 408,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ major: number; minor: number; patch: number; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 9,
                  "endLine": 412,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'violations: { major: number; minor: number; patch: number; total: number; }; violationInfo: { major: number; minor: number; patch: number' is being returned or assigned, but type 'violations: { major: numb' is expected. Please convert type 'violations: { major: number; minor: number; patch: number; total: number; }; violationInfo: { major: number; minor: number; patch: number' to type 'violations: { major: numb', or return or assign a variable of type 'violations: { major: numb'"
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 5,
                  "endLine": 419,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'pkgList' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 29,
                  "endLine": 434,
                  "endColumn": 36
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7034",
          "ruleIndex": 19,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'expiresSoon' implicitly has type 'any[]' in some locations where its type cannot be determined."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 7,
                  "endLine": 436,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7034",
          "ruleIndex": 19,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'unsupportedPackages' implicitly has type 'any[]' in some locations where its type cannot be determined."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 7,
                  "endLine": 438,
                  "endColumn": 26
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7034",
          "ruleIndex": 19,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'supportedPackages' implicitly has type 'any[]' in some locations where its type cannot be determined."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 443,
                  "startColumn": 7,
                  "endLine": 443,
                  "endColumn": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'pkg' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 445,
                  "startColumn": 20,
                  "endLine": 445,
                  "endColumn": 23
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'expiresSoon' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 463,
                  "startColumn": 5,
                  "endLine": 463,
                  "endColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'unsupportedPackages' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 5,
                  "endLine": 465,
                  "endColumn": 24
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'supportedPackages' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 5,
                  "endLine": 470,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'supportResult' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 483,
                  "startColumn": 24,
                  "endLine": 483,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'body' does not exist on type '{ title: string; head: stri; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 24,
                  "endLine": 485,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'results' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 32,
                  "endLine": 495,
                  "endColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7034",
          "ruleIndex": 19,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has type 'any[]' in some locations where its type cannot be determined."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 9,
                  "endLine": 505,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 7,
                  "endLine": 508,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 9,
                  "endLine": 510,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'result' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 34,
                  "endLine": 512,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 7,
                  "endLine": 517,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 519,
                  "startColumn": 9,
                  "endLine": 519,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'result' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 521,
                  "startColumn": 34,
                  "endLine": 521,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 7,
                  "endLine": 526,
                  "endColumn": 15
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 9,
                  "endLine": 528,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'result' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 530,
                  "startColumn": 34,
                  "endLine": 530,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'tempList' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 24,
                  "endLine": 534,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'result' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 537,
                  "startColumn": 29,
                  "endLine": 537,
                  "endColumn": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/output/cli-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/cli-output.ts",
                  "index": 6
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 27,
                  "endLine": 17,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'result' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 23,
                  "endLine": 17,
                  "endColumn": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'row' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 15,
                  "endLine": 30,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The function expects to return 'deprecationDate: string | number | Date', but 'string' is returned. Please convert 'string' value to 'deprecationDate: string | number | Date' or update the function's return type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 11,
                  "endLine": 53,
                  "endColumn": 63
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The function expects to return 'deprecationDate: string | number | Date', but 'string' is returned. Please convert 'string' value to 'deprecationDate: string | number | Date' or update the function's return type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 11,
                  "endLine": 56,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The function expects to return 'duration: number', but 'string' is returned. Please convert 'string' value to 'duration: number' or update the function's return type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 11,
                  "endLine": 66,
                  "endColumn": 50
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The function expects to return 'duration: number', but 'string' is returned. Please convert 'string' value to 'duration: number' or update the function's return type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 11,
                  "endLine": 69,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'label: string; value: string; } | { label: string; value: (row: any) => string; } | { label: string; value: (row: { deprecationDate: string | number | Date; }) => { deprecationDate: string | number | Date' is being returned or assigned, but type 'string | FieldInfo<{ deprecationDate: string | number | Date' is expected. Please convert type 'label: string; value: string; } | { label: string; value: (row: any) => string; } | { label: string; value: (row: { deprecationDate: string | number | Date; }) => { deprecationDate: string | number | Date' to type 'string | FieldInfo<{ deprecationDate: string | number | Date', or return or assign a variable of type 'string | FieldInfo<{ deprecationDate: string | number | Date'"
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 39,
                  "endLine": 76,
                  "endColumn": 45
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'projectPaths' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 29,
                  "endLine": 88,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2355",
          "ruleIndex": 9,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "A function whose declared type is neither 'void' nor 'any' must return a value."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 88,
                  "endLine": 95,
                  "endColumn": 136
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'PathLike' is not assignable to parameter of type 'string'. Consider verifying both types, using type assertion: '(result.projectPath as string)', or using type guard: 'if (result.projectPath instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 23,
                  "endLine": 101,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS18046",
          "ruleIndex": 22,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "'filename' is of type 'unknown'."
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 20,
                  "endLine": 110,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/output/csv-output.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/csv-output.ts",
                  "index": 7
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 44,
                  "endLine": 17,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 29,
                  "endLine": 9,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isWarning' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 89,
                  "endLine": 27,
                  "endColumn": 98
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'type' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 37,
                  "endLine": 52,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isWarning' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 91,
                  "endLine": 71,
                  "endColumn": 100
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'map' does not exist on type '{ type: string; name: strin; }'."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 4,
                  "endLine": 89,
                  "endColumn": 7
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 37,
                  "endLine": 96,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'isSupported' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 38,
                  "endLine": 106,
                  "endColumn": 49
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/output/messages.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/output/messages.ts",
                  "index": 8
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 44,
                  "endLine": 27,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7016",
          "ruleIndex": 23,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Could not find a declaration file for module 'minipass-fetch'. '/Users/akusuma/workspace/opensource/supported/node_modules/minipass-fetch/lib/index.js' implicitly has an 'any' type..  Try `npm i --save-dev @types/minipass-fetch` if it exists or add a new declaration (.d.ts) file containing `declare module 'minipass-fetch';`"
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"../util\"' has no exported member 'isLtsPackage'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 40,
                  "endLine": 13,
                  "endColumn": 52
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'dependenciesToCheck' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'projectName' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 14
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7031",
          "ruleIndex": 20,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Binding element 'progressLogger' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 5,
                  "endLine": 22,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7034",
          "ruleIndex": 19,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'supportChecks' implicitly has type 'any[]' in some locations where its type cannot be determined."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 9,
                  "endLine": 30,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'duration' does not exist on type '{ isSupported: boolean; }'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 43,
                  "endLine": 52,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 22,
                  "endLine": 61,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'request' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 60,
                  "endLine": 66,
                  "endColumn": 67
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'code' does not exist on type 'Error'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 19,
                  "endLine": 76,
                  "endColumn": 23
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{}'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 13,
                  "endLine": 84,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The variable 'result' has type 'string', but 'isSupported: boolean' is assigned. Please convert 'isSupported: boolean' to 'string' or change variable's type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 13,
                  "endLine": 92,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'isSupported' does not exist on type 'string'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 46,
                  "endLine": 118,
                  "endColumn": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'isSupported' does not exist on type 'string'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 45,
                  "endLine": 122,
                  "endColumn": 56
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2698",
          "ruleIndex": 24,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Spread types may only be created from object types."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 13,
                  "endLine": 128,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'isSupported' does not exist on type 'string'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 20,
                  "endLine": 136,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'isSupported' does not exist on type 'string'."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 20,
                  "endLine": 138,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'supportChecks' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 3,
                  "endLine": 160,
                  "endColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'supportChecks' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 25,
                  "endLine": 164,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7005",
          "ruleIndex": 21,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Variable 'supportChecks' implicitly has an 'any[]' type."
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 5,
                  "endLine": 166,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/project/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/index.ts",
                  "index": 9
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 8,
                  "endLine": 23,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS1192",
          "ruleIndex": 25,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"/Users/akusuma/workspace/opensource/supported/lib/project/index\"' has no default export."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"../util\"' has no exported member 'ProgressLogger'."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 14,
                  "endLine": 11,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter '_projectPaths' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 39,
                  "endLine": 18,
                  "endColumn": 52
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2552",
          "ruleIndex": 26,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'setupProjectFn'. Did you mean 'setupProject'?"
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 24,
                  "endLine": 21,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'projectPaths'."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 22,
                  "endLine": 28,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7022",
          "ruleIndex": 27,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "'projectPaths' implicitly has type 'any' because it does not have a type annotation and is referenced directly or indirectly in its own initializer."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 11,
                  "endLine": 30,
                  "endColumn": 23
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'projectPaths'."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 27,
                  "endLine": 37,
                  "endColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'spinner'."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 43,
                  "endLine": 39,
                  "endColumn": 50
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2552",
          "ruleIndex": 26,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'projectPaths'. Did you mean 'projectPath'?"
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 29,
                  "endLine": 43,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'dep' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 24,
                  "endLine": 49,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'today'."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 11,
                  "endLine": 63,
                  "endColumn": 16
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'any' is not assignable to parameter of type 'never'. Consider verifying both types, using type assertion: '(auditResult as string)', or using type guard: 'if (auditResult instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 30,
                  "endLine": 81,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/project/multiple-projects.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/multiple-projects.ts",
                  "index": 10
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 87,
                  "endLine": 18,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7016",
          "ruleIndex": 23,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Could not find a declaration file for module 'npm-package-arg'. '/Users/akusuma/workspace/opensource/supported/node_modules/npm-package-arg/npa.js' implicitly has an 'any' type..  Try `npm i --save-dev @types/npm-package-arg` if it exists or add a new declaration (.d.ts) file containing `declare module 'npm-package-arg';`"
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 21,
                  "endLine": 6,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS1192",
          "ruleIndex": 25,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"/Users/akusuma/workspace/opensource/supported/lib/npm/config\"' has no default export."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 12,
                  "endLine": 12,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2339",
          "ruleIndex": 3,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Property 'lockfile' does not exist on type '{ isClassic: boolean; }'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 24,
                  "endLine": 22,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'string' is being returned or assigned, but type 'object' is expected. Please convert type 'string' to type 'object', or return or assign a variable of type 'object'"
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 20,
                  "endLine": 33,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7015",
          "ruleIndex": 28,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because index expression is not of type 'number'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 36,
                  "endLine": 38,
                  "endColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The function expects to return 'string', but 'boolean' is returned. Please convert 'boolean' value to 'string' or update the function's return type."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 43,
                  "endColumn": 87
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2538",
          "ruleIndex": 29,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'undefined' cannot be used as an index type."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 40,
                  "endLine": 53,
                  "endColumn": 58
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2532",
          "ruleIndex": 30,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Object is possibly 'undefined'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 15,
                  "endLine": 61,
                  "endColumn": 33
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2532",
          "ruleIndex": 30,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Object is possibly 'undefined'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 16,
                  "endLine": 63,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2532",
          "ruleIndex": 30,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Object is possibly 'undefined'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 17,
                  "endLine": 65,
                  "endColumn": 35
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2538",
          "ruleIndex": 29,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'undefined' cannot be used as an index type."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 44,
                  "endLine": 68,
                  "endColumn": 62
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2538",
          "ruleIndex": 29,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'undefined' cannot be used as an index type."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 36,
                  "endLine": 83,
                  "endColumn": 54
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'lockf'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 87,
                  "endLine": 89,
                  "endColumn": 92
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2552",
          "ruleIndex": 26,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'lockfilePath'. Did you mean 'lockfile'?"
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 69,
                  "endLine": 92,
                  "endColumn": 81
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'unknown' is not assignable to parameter of type 'string | number | SemVer | null | undefined'. Consider specifying type of argument to be 'string | number | SemVer | null | undefined', using type assertion: '(version as string | number | SemVer | null | undefined)', or using type guard: 'if (version instanceof string | number | SemVer | null | undefined) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 24,
                  "endLine": 131,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'unknown' is not assignable to parameter of type 'string | number | SemVer | null | undefined'. Consider specifying type of argument to be 'string | number | SemVer | null | undefined', using type assertion: '(version as string | number | SemVer | null | undefined)', or using type guard: 'if (version instanceof string | number | SemVer | null | undefined) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 24,
                  "endLine": 148,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'config' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 31,
                  "endLine": 172,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'st'."
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 112,
                  "endLine": 198,
                  "endColumn": 114
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'name: string; version: string; type: string' is being returned or assigned, but type 'name: string; version: st' is expected. Please convert type 'name: string; version: string; type: string' to type 'name: string; version: st', or return or assign a variable of type 'name: string; version: st'"
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 5,
                  "endLine": 209,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/project/setup-project.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/project/setup-project.ts",
                  "index": 11
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 15,
                  "endLine": 15,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2305",
          "ruleIndex": 0,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Module '\"../util\"' has no exported member 'DEFAULT_PRIMARY_POLICY'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 51,
                  "endLine": 7,
                  "endColumn": 73
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2552",
          "ruleIndex": 26,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'strin'. Did you mean 'string'?"
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 143,
                  "endLine": 16,
                  "endColumn": 148
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2739",
          "ruleIndex": 31,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type '{ type: string; name: string; date: Date; }[]' is missing the following properties from type '{ type: string; name: strin; }': type, name"
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'Integer'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 22,
                  "endLine": 68,
                  "endColumn": 29
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Type 'major: Date; minor: Date; patch: Date; prerelease: Date; premajor: Date; preminor: Date; prepatch: Date' is being returned or assigned, but type 'major: Date; minor: Date' is expected. Please convert type 'major: Date; minor: Date; patch: Date; prerelease: Date; premajor: Date; preminor: Date; prepatch: Date' to type 'major: Date; minor: Date', or return or assign a variable of type 'major: Date; minor: Date'"
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 5,
                  "endLine": 86,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter 'info' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 55,
                  "endLine": 102,
                  "endColumn": 59
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'string | undefined' is not assignable to parameter of type 'string | SemVer'. Consider verifying both types, using type assertion: '(versionArray[i] as string)', or using type guard: 'if (versionArray[i] instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 21,
                  "endLine": 113,
                  "endColumn": 36
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2322",
          "ruleIndex": 11,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "The variable 'nextVersion' has type 'string', but 'SemVer | null' is assigned. Please convert 'SemVer | null' to 'string' or change variable's type."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 7,
                  "endLine": 115,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter '_info' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 3,
                  "endLine": 125,
                  "endColumn": 8
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2552",
          "ruleIndex": 26,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'strin'. Did you mean 'string'?"
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 36,
                  "endLine": 128,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter '_upgradeBudget' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 3,
                  "endLine": 132,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7006",
          "ruleIndex": 2,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parameter '_ignorePrereleases' implicitly has an 'any' type."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 3,
                  "endLine": 134,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS4060",
          "ruleIndex": 10,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Return type of exported function has or is using private name ''."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 31,
                  "endLine": 136,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'packageName'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 40,
                  "endLine": 138,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'ignorePrereleases'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 54,
                  "endLine": 142,
                  "endColumn": 71
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2552",
          "ruleIndex": 26,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name '_today'. Did you mean 'today'?"
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 15,
                  "endLine": 147,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'SemVer | null' is not assignable to parameter of type 'string | SemVer'. Consider verifying both types, using type assertion: '(parsed as string)', or using type guard: 'if (parsed instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 30,
                  "endLine": 149,
                  "endColumn": 36
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2345",
          "ruleIndex": 4,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Argument of type 'SemVer | null' is not assignable to parameter of type 'string | SemVer'. Consider verifying both types, using type assertion: '(parsed as string)', or using type guard: 'if (parsed instanceof string) { ... }'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 22,
                  "endLine": 151,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'effectiveReleaseDate'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 23,
                  "endLine": 155,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'upgradeBudget'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 64,
                  "endLine": 157,
                  "endColumn": 77
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'ReleaseType' can't be used to index type '{ major: Date; minor: Date; }'..  Property 'patch' does not exist on type '{ major: Date; minor: Date; }'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 29,
                  "endLine": 159,
                  "endColumn": 61
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS7053",
          "ruleIndex": 18,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Element implicitly has an 'any' type because expression of type 'ReleaseType' can't be used to index type '{ major: Date; minor: Date; }'..  Property 'patch' does not exist on type '{ major: Date; minor: Date; }'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 26,
                  "endLine": 163,
                  "endColumn": 58
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'policies'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 20,
                  "endLine": 169,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "TS2304",
          "ruleIndex": 16,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Cannot find name 'packageName'."
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 69,
                  "endLine": 173,
                  "endColumn": 80
                }
              }
            }
          ]
        },
        {
          "ruleId": "error-generated-by-Eslint-core",
          "ruleIndex": 5,
          "level": "error",
          "kind": "fail",
          "message": {
            "text": "Parsing error: Unexpected token :"
          },
          "analysisTarget": {
            "uri": "lib/time/index.ts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/time/index.ts",
                  "index": 12
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 40,
                  "endLine": 16,
                  "endColumn": 2
                }
              }
            }
          ]
        }
      ],
      "automationDetails": {
        "description": {
          "text": "This is the result of @rehearsal/migrate on your product against TypeScript 4.9.5 at 3/10/2023, 12:34:41"
        }
      }
    }
  ]
}